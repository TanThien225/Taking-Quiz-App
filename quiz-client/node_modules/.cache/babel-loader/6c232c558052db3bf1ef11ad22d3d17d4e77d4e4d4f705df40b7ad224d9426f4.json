{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nicolas\\\\React Basis\\\\Quiz Client\\\\Quiz App with React\\\\quiz-client\\\\src\\\\Components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { BASE_URL, ENDPOINTS, createAPIEndpoint } from \"../API\";\nimport { Box, Card, CardContent, CardHeader, CardMedia, LinearProgress, List, ListItemButton, Typography } from \"@mui/material\";\nimport { getFormatedTime } from \"../Helper\";\nimport useStateContext from \"../Hooks/useStateContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useInterval } from \"../Hooks/useInterval\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [qnIndex, setQnIndex] = useState(0);\n  const [timeTaken, setTimeTaken] = useState(0);\n  const {\n    context,\n    setContext\n  } = useStateContext();\n  const navigate = useNavigate();\n  let timer;\n  const startTimer = () => {\n    if (!timerStarted.current) {\n      timer = setInterval(() => {\n        setTimeTaken(prev => prev + 1);\n      }, [1000]);\n    }\n  };\n  useEffect(() => {\n    setContext({\n      timeSpend: 0,\n      selectedOption: []\n    });\n    createAPIEndpoint(ENDPOINTS.question).fetch().then(res => {\n      // console.log(res.data);\n      setQuestions(res.data);\n      startTimer();\n    }).catch(err => console.log(err));\n\n    //return this function 'll invoke whenever we leave this component navigate to othes, reload\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  const timerStarted = useRef(false);\n  const showAnswer = (questionId, optionsId) => {\n    // console.log(context.selectedOptions);\n    const temp = [...context.selectedOption];\n    // this state context is immutable bat bien, can not update\n    temp.push({\n      questionId: questionId,\n      chosenOpt: optionsId\n    });\n    if (qnIndex < 4) {\n      setContext({\n        selectedOption: [...temp]\n      });\n      //move to others question\n      setQnIndex(qnIndex + 1);\n    }\n    //last question update timetaken\n    else {\n      setContext({\n        selectedOption: [...temp],\n        timeSpend: timeTaken\n      });\n      //navigate to result component\n      navigate(\"/Result\");\n    }\n  };\n  return questions.length === 0 ? null : /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 640,\n      mx: \"auto\",\n      mt: 5,\n      \"& .MuiCardHeader-action\": {\n        m: 0,\n        alignSelf: \"center\"\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Question \" + (qnIndex + 1) + \" of 5:\",\n      action: /*#__PURE__*/_jsxDEV(Typography, {\n        children: getFormatedTime(timeTaken)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: (qnIndex + 1) / 5 * 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), questions[qnIndex].questionImage == null ? null : /*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      image: BASE_URL + \"images/\" + questions[qnIndex].questionImage,\n      sx: {\n        m: \"10px auto\"\n      }\n      // width: \"auto\",\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: questions[qnIndex].questionContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: questions[qnIndex].options.map((item, index) => /*#__PURE__*/_jsxDEV(ListItemButton, {\n          disableRipple: true,\n          onClick: () => showAnswer(questions[qnIndex].questionId, index + 1),\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: String.fromCharCode(65 + index) + \". \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), item]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"YNu19LVNwzapraig7c3ZmxluAZg=\", false, function () {\n  return [useStateContext, useNavigate];\n});\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useRef","useState","BASE_URL","ENDPOINTS","createAPIEndpoint","Box","Card","CardContent","CardHeader","CardMedia","LinearProgress","List","ListItemButton","Typography","getFormatedTime","useStateContext","useNavigate","useInterval","jsxDEV","_jsxDEV","Quiz","_s","questions","setQuestions","qnIndex","setQnIndex","timeTaken","setTimeTaken","context","setContext","navigate","timer","startTimer","timerStarted","current","setInterval","prev","timeSpend","selectedOption","question","fetch","then","res","data","catch","err","console","log","clearInterval","showAnswer","questionId","optionsId","temp","push","chosenOpt","length","sx","maxWidth","mx","mt","m","alignSelf","children","title","action","fileName","_jsxFileName","lineNumber","columnNumber","variant","value","questionImage","component","image","questionContent","options","map","item","index","disableRipple","onClick","String","fromCharCode","_c","$RefreshReg$"],"sources":["D:/Nicolas/React Basis/Quiz Client/Quiz App with React/quiz-client/src/Components/Quiz.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { BASE_URL, ENDPOINTS, createAPIEndpoint } from \"../API\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  LinearProgress,\r\n  List,\r\n  ListItemButton,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { getFormatedTime } from \"../Helper\";\r\nimport useStateContext from \"../Hooks/useStateContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useInterval } from \"../Hooks/useInterval\";\r\n\r\nexport default function Quiz() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [qnIndex, setQnIndex] = useState(0);\r\n  const [timeTaken, setTimeTaken] = useState(0);\r\n\r\n  const { context, setContext } = useStateContext();\r\n  const navigate = useNavigate();\r\n  let timer;\r\n\r\n  const startTimer = () => {\r\n    if (!timerStarted.current) {\r\n      timer = setInterval(() => {\r\n        setTimeTaken((prev) => prev + 1);\r\n      }, [1000]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setContext({\r\n      timeSpend: 0,\r\n      selectedOption: [],\r\n    });\r\n    createAPIEndpoint(ENDPOINTS.question)\r\n      .fetch()\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setQuestions(res.data);\r\n        startTimer();\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    //return this function 'll invoke whenever we leave this component navigate to othes, reload\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  const timerStarted = useRef(false);\r\n\r\n  const showAnswer = (questionId, optionsId) => {\r\n    // console.log(context.selectedOptions);\r\n    const temp = [...context.selectedOption];\r\n    // this state context is immutable bat bien, can not update\r\n    temp.push({\r\n      questionId: questionId,\r\n      chosenOpt: optionsId,\r\n    });\r\n\r\n    if (qnIndex < 4) {\r\n      setContext({ selectedOption: [...temp] });\r\n      //move to others question\r\n      setQnIndex(qnIndex + 1);\r\n    }\r\n    //last question update timetaken\r\n    else {\r\n      setContext({ selectedOption: [...temp], timeSpend: timeTaken });\r\n      //navigate to result component\r\n      navigate(\"/Result\");\r\n    }\r\n  };\r\n\r\n  return questions.length === 0 ? null : (\r\n    <Card\r\n      sx={{\r\n        maxWidth: 640,\r\n        mx: \"auto\",\r\n        mt: 5,\r\n        \"& .MuiCardHeader-action\": { m: 0, alignSelf: \"center\" },\r\n      }}\r\n    >\r\n      <CardHeader\r\n        title={\"Question \" + (qnIndex + 1) + \" of 5:\"}\r\n        action={<Typography>{getFormatedTime(timeTaken)}</Typography>}\r\n      />\r\n      <Box>\r\n        <LinearProgress\r\n          variant=\"determinate\"\r\n          value={((qnIndex + 1) / 5) * 100}\r\n        />\r\n      </Box>\r\n      {questions[qnIndex].questionImage == null ? null : (\r\n        <CardMedia\r\n          component=\"img\"\r\n          image={BASE_URL + \"images/\" + questions[qnIndex].questionImage}\r\n          sx={{ m: \"10px auto\" }}\r\n          // width: \"auto\",\r\n        />\r\n      )}\r\n      <CardContent>\r\n        <Typography variant=\"h6\">\r\n          {questions[qnIndex].questionContent}\r\n        </Typography>\r\n        <List>\r\n          {questions[qnIndex].options.map((item, index) => (\r\n            <ListItemButton\r\n              key={index}\r\n              disableRipple\r\n              onClick={() =>\r\n                showAnswer(questions[qnIndex].questionId, index + 1)\r\n              }\r\n            >\r\n              <b>{String.fromCharCode(65 + index) + \". \"}</b>\r\n              {item}\r\n            </ListItemButton>\r\n          ))}\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}