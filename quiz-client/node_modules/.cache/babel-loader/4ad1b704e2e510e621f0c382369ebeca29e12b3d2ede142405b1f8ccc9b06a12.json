{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nicolas\\\\React Basis\\\\Quiz Client\\\\Quiz App with React\\\\quiz-client\\\\src\\\\Components\\\\Answer.js\",\n  _s = $RefreshSig$();\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardMedia, List, ListItem, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { BASE_URL } from \"../API\";\nimport ArrowDropDownCircleIcon from \"@mui/icons-material/ArrowDropDownCircle\";\nimport { green, red } from \"@mui/material/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Answer({\n  qnAnswers\n}) {\n  _s();\n  const [expanded, setExpanded] = useState(false);\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 5,\n      width: \"100%\",\n      maxWidth: 640,\n      mx: \"auto\"\n    },\n    children: qnAnswers.map((item, index) => /*#__PURE__*/_jsxDEV(Accordion, {\n      disableGutters: true,\n      expanded: expanded === index,\n      onChange: handleChange(index),\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ArrowDropDownCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this),\n        sx: {\n          color: item.theAnswer == item.chosenOpt ? green[500] : red[500]\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            width: \"90%\",\n            flexShrink: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: index + 1 + \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), \" \", item.questionContent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        children: [item.questionImage ? /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          image: BASE_URL + \"images/\" + item.questionImage,\n          sx: {\n            m: \"10px auto\"\n          }\n          // width: \"auto\",\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(List, {\n          children: item.options.map((opt, idx) => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: String.fromCharCode(65 + idx) + \". \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this), opt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Answer, \"DuL5jiiQQFgbn7gBKAyxwS/H4Ek=\");\n_c = Answer;\nvar _c;\n$RefreshReg$(_c, \"Answer\");","map":{"version":3,"names":["Accordion","AccordionDetails","AccordionSummary","Box","CardMedia","List","ListItem","Typography","React","useState","BASE_URL","ArrowDropDownCircleIcon","green","red","jsxDEV","_jsxDEV","Answer","qnAnswers","_s","expanded","setExpanded","handleChange","panel","event","isExpanded","sx","mt","width","maxWidth","mx","children","map","item","index","disableGutters","onChange","expandIcon","fileName","_jsxFileName","lineNumber","columnNumber","color","theAnswer","chosenOpt","flexShrink","questionContent","questionImage","component","image","m","options","opt","idx","String","fromCharCode","_c","$RefreshReg$"],"sources":["D:/Nicolas/React Basis/Quiz Client/Quiz App with React/quiz-client/src/Components/Answer.js"],"sourcesContent":["import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Box,\r\n  CardMedia,\r\n  List,\r\n  ListItem,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { BASE_URL } from \"../API\";\r\nimport ArrowDropDownCircleIcon from \"@mui/icons-material/ArrowDropDownCircle\";\r\nimport { green, red } from \"@mui/material/colors\";\r\n\r\nexport default function Answer({ qnAnswers }) {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: 5, width: \"100%\", maxWidth: 640, mx: \"auto\" }}>\r\n      {qnAnswers.map((item, index) => (\r\n        <Accordion\r\n          disableGutters\r\n          key={index}\r\n          expanded={expanded === index}\r\n          onChange={handleChange(index)}\r\n        >\r\n          <AccordionSummary\r\n            expandIcon={<ArrowDropDownCircleIcon />}\r\n            sx={{\r\n              color: item.theAnswer == item.chosenOpt ? green[500] : red[500],\r\n            }}\r\n          >\r\n            <Typography sx={{ width: \"90%\", flexShrink: 0 }}>\r\n              <b>{index + 1 + \".\"}</b> {item.questionContent}\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            {item.questionImage ? (\r\n              <CardMedia\r\n                component=\"img\"\r\n                image={BASE_URL + \"images/\" + item.questionImage}\r\n                sx={{ m: \"10px auto\" }}\r\n                // width: \"auto\",\r\n              />\r\n            ) : null}\r\n            <List>\r\n              {item.options.map((opt, idx) => (\r\n                <ListItem key={idx}>\r\n                  <Typography>\r\n                    <b>{String.fromCharCode(65 + idx) + \". \"}</b>\r\n                    {opt}\r\n                  </Typography>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}