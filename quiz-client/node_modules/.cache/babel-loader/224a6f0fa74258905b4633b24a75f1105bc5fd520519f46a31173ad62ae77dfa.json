{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nicolas\\\\React Basis\\\\Quiz Client\\\\Quiz App with React\\\\quiz-client\\\\src\\\\Components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ENDPOINTS, createAPIEndpoint } from \"../API\";\nimport { Box, Card, CardContent, CardHeader, LinearProgress, List, ListItemButton, Typography } from \"@mui/material\";\nimport { getFormatedTime } from \"../Helper\";\nimport useStateContext from \"../Hooks/useStateContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [qnIndex, setQnIndex] = useState(0);\n  const [timeTaken, setTimeTaken] = useState(0);\n  const {\n    context,\n    setContext\n  } = useStateContext();\n  let timer;\n  const startTimer = () => {\n    timer = setInterval(() => {\n      setTimeTaken(prev => prev + 1);\n    }, [1000]);\n  };\n  useEffect(() => {\n    createAPIEndpoint(ENDPOINTS.question).fetch().then(res => {\n      setQuestions(res.data);\n      startTimer();\n    }).catch(err => console.log(err));\n\n    //return this function 'll invoke whenever we leave this component navigate to othes, reload\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  const showAnswer = (questionId, optionsId) => {\n    // console.log(context.selectedOptions);\n    const temp = [...context.selectedOption];\n    // this state context is immutable bat bien, can not update\n    temp.push({\n      questionId: questionId,\n      chosenOpt: optionsId\n    });\n    if (qnIndex < 4) {\n      setConText({\n        selectedOption: [...temp]\n      });\n      //move to others question\n      setQnIndex(qnIndex + 1);\n    }\n    //last question update timetaken\n    else {\n      setConText({\n        selectedOption: [...temp],\n        timeSpend: timeTaken\n      });\n      //navigate to result component\n    }\n  };\n  return questions.length === 0 ? null : /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 640,\n      mx: \"auto\",\n      mt: 5,\n      \"& .MuiCardHeader-action\": {\n        m: 0,\n        alignSelf: \"center\"\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Question \" + (qnIndex + 1) + \" of 5:\",\n      action: /*#__PURE__*/_jsxDEV(Typography, {\n        children: getFormatedTime(timeTaken)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: (qnIndex + 1) / 5 * 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: questions[qnIndex].questionContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: questions[qnIndex].options.map((item, index) => /*#__PURE__*/_jsxDEV(ListItemButton, {\n          disableRipple: true,\n          onClick: () => showAnswer(questions[qnIndex].questionId, index),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: String.fromCharCode(65 + index) + \". \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), item]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"q9Qh+y94fJ/jTWKYbl8pB8RsT74=\", false, function () {\n  return [useStateContext];\n});\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useState","ENDPOINTS","createAPIEndpoint","Box","Card","CardContent","CardHeader","LinearProgress","List","ListItemButton","Typography","getFormatedTime","useStateContext","jsxDEV","_jsxDEV","Quiz","_s","questions","setQuestions","qnIndex","setQnIndex","timeTaken","setTimeTaken","context","setContext","timer","startTimer","setInterval","prev","question","fetch","then","res","data","catch","err","console","log","clearInterval","showAnswer","questionId","optionsId","temp","selectedOption","push","chosenOpt","setConText","timeSpend","length","sx","maxWidth","mx","mt","m","alignSelf","children","title","action","fileName","_jsxFileName","lineNumber","columnNumber","variant","value","questionContent","options","map","item","index","disableRipple","onClick","String","fromCharCode","_c","$RefreshReg$"],"sources":["D:/Nicolas/React Basis/Quiz Client/Quiz App with React/quiz-client/src/Components/Quiz.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ENDPOINTS, createAPIEndpoint } from \"../API\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  LinearProgress,\r\n  List,\r\n  ListItemButton,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { getFormatedTime } from \"../Helper\";\r\nimport useStateContext from \"../Hooks/useStateContext\";\r\n\r\nexport default function Quiz() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [qnIndex, setQnIndex] = useState(0);\r\n  const [timeTaken, setTimeTaken] = useState(0);\r\n\r\n  const { context, setContext } = useStateContext();\r\n\r\n  let timer;\r\n\r\n  const startTimer = () => {\r\n    timer = setInterval(() => {\r\n      setTimeTaken((prev) => prev + 1);\r\n    }, [1000]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    createAPIEndpoint(ENDPOINTS.question)\r\n      .fetch()\r\n      .then((res) => {\r\n        setQuestions(res.data);\r\n        startTimer();\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    //return this function 'll invoke whenever we leave this component navigate to othes, reload\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  const showAnswer = (questionId, optionsId) => {\r\n    // console.log(context.selectedOptions);\r\n    const temp = [...context.selectedOption];\r\n    // this state context is immutable bat bien, can not update\r\n    temp.push({\r\n      questionId: questionId,\r\n      chosenOpt: optionsId,\r\n    });\r\n\r\n    if (qnIndex < 4) {\r\n      setConText({ selectedOption: [...temp] });\r\n      //move to others question\r\n      setQnIndex(qnIndex + 1);\r\n    }\r\n    //last question update timetaken\r\n    else {\r\n      setConText({ selectedOption: [...temp], timeSpend: timeTaken });\r\n      //navigate to result component\r\n    }\r\n  };\r\n\r\n  return questions.length === 0 ? null : (\r\n    <Card\r\n      sx={{\r\n        maxWidth: 640,\r\n        mx: \"auto\",\r\n        mt: 5,\r\n        \"& .MuiCardHeader-action\": { m: 0, alignSelf: \"center\" },\r\n      }}\r\n    >\r\n      <CardHeader\r\n        title={\"Question \" + (qnIndex + 1) + \" of 5:\"}\r\n        action={<Typography>{getFormatedTime(timeTaken)}</Typography>}\r\n      />\r\n      <Box>\r\n        <LinearProgress\r\n          variant=\"determinate\"\r\n          value={((qnIndex + 1) / 5) * 100}\r\n        />\r\n      </Box>\r\n      <CardContent>\r\n        <Typography variant=\"h6\">\r\n          {questions[qnIndex].questionContent}\r\n        </Typography>\r\n        <List>\r\n          {questions[qnIndex].options.map((item, index) => (\r\n            <ListItemButton\r\n              key={index}\r\n              disableRipple\r\n              onClick={() => showAnswer(questions[qnIndex].questionId, index)}\r\n            >\r\n              <div>\r\n                <b>{String.fromCharCode(65 + index) + \". \"}</b>\r\n                {item}\r\n              </div>\r\n            </ListItemButton>\r\n          ))}\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,iBAAiB,QAAQ,QAAQ;AACrD,SACEC,GAAG,EACHC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,cAAc,EACdC,IAAI,EACJC,cAAc,EACdC,UAAU,QACL,eAAe;AACtB,SAASC,eAAe,QAAQ,WAAW;AAC3C,OAAOC,eAAe,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAM;IAAEuB,OAAO;IAAEC;EAAW,CAAC,GAAGZ,eAAe,CAAC,CAAC;EAEjD,IAAIa,KAAK;EAET,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBD,KAAK,GAAGE,WAAW,CAAC,MAAM;MACxBL,YAAY,CAAEM,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;IAClC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;EACZ,CAAC;EAED7B,SAAS,CAAC,MAAM;IACdG,iBAAiB,CAACD,SAAS,CAAC4B,QAAQ,CAAC,CAClCC,KAAK,CAAC,CAAC,CACPC,IAAI,CAAEC,GAAG,IAAK;MACbd,YAAY,CAACc,GAAG,CAACC,IAAI,CAAC;MACtBP,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,CACDQ,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;;IAEnC;IACA,OAAO,MAAM;MACXG,aAAa,CAACb,KAAK,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,UAAU,GAAGA,CAACC,UAAU,EAAEC,SAAS,KAAK;IAC5C;IACA,MAAMC,IAAI,GAAG,CAAC,GAAGnB,OAAO,CAACoB,cAAc,CAAC;IACxC;IACAD,IAAI,CAACE,IAAI,CAAC;MACRJ,UAAU,EAAEA,UAAU;MACtBK,SAAS,EAAEJ;IACb,CAAC,CAAC;IAEF,IAAItB,OAAO,GAAG,CAAC,EAAE;MACf2B,UAAU,CAAC;QAAEH,cAAc,EAAE,CAAC,GAAGD,IAAI;MAAE,CAAC,CAAC;MACzC;MACAtB,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;IACzB;IACA;IAAA,KACK;MACH2B,UAAU,CAAC;QAAEH,cAAc,EAAE,CAAC,GAAGD,IAAI,CAAC;QAAEK,SAAS,EAAE1B;MAAU,CAAC,CAAC;MAC/D;IACF;EACF,CAAC;EAED,OAAOJ,SAAS,CAAC+B,MAAM,KAAK,CAAC,GAAG,IAAI,gBAClClC,OAAA,CAACV,IAAI;IACH6C,EAAE,EAAE;MACFC,QAAQ,EAAE,GAAG;MACbC,EAAE,EAAE,MAAM;MACVC,EAAE,EAAE,CAAC;MACL,yBAAyB,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAS;IACzD,CAAE;IAAAC,QAAA,gBAEFzC,OAAA,CAACR,UAAU;MACTkD,KAAK,EAAE,WAAW,IAAIrC,OAAO,GAAG,CAAC,CAAC,GAAG,QAAS;MAC9CsC,MAAM,eAAE3C,OAAA,CAACJ,UAAU;QAAA6C,QAAA,EAAE5C,eAAe,CAACU,SAAS;MAAC;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eACF/C,OAAA,CAACX,GAAG;MAAAoD,QAAA,eACFzC,OAAA,CAACP,cAAc;QACbuD,OAAO,EAAC,aAAa;QACrBC,KAAK,EAAG,CAAC5C,OAAO,GAAG,CAAC,IAAI,CAAC,GAAI;MAAI;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN/C,OAAA,CAACT,WAAW;MAAAkD,QAAA,gBACVzC,OAAA,CAACJ,UAAU;QAACoD,OAAO,EAAC,IAAI;QAAAP,QAAA,EACrBtC,SAAS,CAACE,OAAO,CAAC,CAAC6C;MAAe;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACb/C,OAAA,CAACN,IAAI;QAAA+C,QAAA,EACFtC,SAAS,CAACE,OAAO,CAAC,CAAC8C,OAAO,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1CtD,OAAA,CAACL,cAAc;UAEb4D,aAAa;UACbC,OAAO,EAAEA,CAAA,KAAM/B,UAAU,CAACtB,SAAS,CAACE,OAAO,CAAC,CAACqB,UAAU,EAAE4B,KAAK,CAAE;UAAAb,QAAA,eAEhEzC,OAAA;YAAAyC,QAAA,gBACEzC,OAAA;cAAAyC,QAAA,EAAIgB,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGJ,KAAK,CAAC,GAAG;YAAI;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAC9CM,IAAI;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC,GAPDO,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQI,CACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CACP;AACH;AAAC7C,EAAA,CA3FuBD,IAAI;EAAA,QAKMH,eAAe;AAAA;AAAA6D,EAAA,GALzB1D,IAAI;AAAA,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}